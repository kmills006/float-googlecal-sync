import Request, { RequestOptions, DefaultsOptions } from './request';
import Response from './response';
import * as plugins from './plugins/index';
import form from './form';
import jar from './jar';
export interface Popsicle {
    (options: RequestOptions | string): Request;
    plugins: typeof plugins;
    Request: typeof Request;
    Response: typeof Response;
    defaults: (defaults: DefaultsOptions) => Popsicle;
    form: typeof form;
    jar: typeof jar;
    browser: boolean;
    get(options: RequestOptions | string): Request;
    post(options: RequestOptions | string): Request;
    put(options: RequestOptions | string): Request;
    head(options: RequestOptions | string): Request;
    delete(options: RequestOptions | string): Request;
    options(options: RequestOptions | string): Request;
    trace(options: RequestOptions | string): Request;
    copy(options: RequestOptions | string): Request;
    lock(options: RequestOptions | string): Request;
    mkcol(options: RequestOptions | string): Request;
    move(options: RequestOptions | string): Request;
    purge(options: RequestOptions | string): Request;
    propfind(options: RequestOptions | string): Request;
    proppatch(options: RequestOptions | string): Request;
    unlock(options: RequestOptions | string): Request;
    report(options: RequestOptions | string): Request;
    mkactivity(options: RequestOptions | string): Request;
    checkout(options: RequestOptions | string): Request;
    merge(options: RequestOptions | string): Request;
    'm-search'(options: RequestOptions | string): Request;
    notify(options: RequestOptions | string): Request;
    subscribe(options: RequestOptions | string): Request;
    unsubscribe(options: RequestOptions | string): Request;
    patch(options: RequestOptions | string): Request;
    search(options: RequestOptions | string): Request;
    connect(options: RequestOptions | string): Request;
}
export declare function defaults(defaultsOptions: DefaultsOptions): Popsicle;
