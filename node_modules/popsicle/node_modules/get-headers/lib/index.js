function parse(value) {
    var arr = [];
    var lines = value.replace(/\r?\n$/, '').split(/\r?\n/);
    for (var i = 0; i < lines.length; i++) {
        var header = lines[i];
        var indexOf = header.indexOf(':');
        var name_1 = header.substr(0, indexOf).trim();
        var value_1 = header.substr(indexOf + 1).trim();
        arr.push(name_1, value_1);
    }
    return array(arr);
}
exports.parse = parse;
function http(response) {
    if (response.rawHeaders) {
        return array(response.rawHeaders);
    }
    var headers = {};
    Object.keys(response.headers).forEach(function (key) {
        var value = response.headers[key];
        if (value.length === 1) {
            headers[key] = value[0];
        }
        else {
            headers[key] = value;
        }
    });
    return headers;
}
exports.http = http;
function array(values) {
    var casing = {};
    var headers = {};
    for (var i = 0; i < values.length; i = i + 2) {
        var name_2 = values[i];
        var lower = name_2.toLowerCase();
        var oldName = casing[lower];
        var value = values[i + 1];
        if (!headers.hasOwnProperty(oldName)) {
            headers[name_2] = value;
        }
        else {
            if (name_2 !== oldName) {
                headers[name_2] = headers[oldName];
                delete headers[oldName];
            }
            if (typeof headers[name_2] === 'string') {
                headers[name_2] = [headers[name_2], value];
            }
            else {
                headers[name_2].push(value);
            }
        }
        casing[lower] = name_2;
    }
    return headers;
}
exports.array = array;
//# sourceMappingURL=index.js.map